// pdf.worker.min.mjs - A simple PDF.js worker implementation
// Place this file in your public directory

// Create a simple worker handler without ES module syntax
var WorkerMessageHandler = {
  setup: function() {
    console.log("PDF.js worker initialized");
    return true;
  },
  
  handleMessage: function(data) {
    console.log("PDF.js worker handling message:", data.cmd || data.type);
    
    // Return appropriate responses based on message type
    switch (data.cmd || data.type) {
      case 'GetDocRequest':
      case 'LOAD_DUMMY_PDF':
        return {
          numPages: data.pdfInfo?.numPages || 5,
          fingerprint: 'custom-fingerprint-' + Date.now(),
          info: {
            PDFFormatVersion: '1.7',
            IsLinearized: false,
            IsAcroFormPresent: false,
            IsXFAPresent: false
          }
        };
      
      case 'GetPage':
      case 'PAGE_INFO':
        return {
          pageIndex: data.pageIndex || 0,
          rotate: 0,
          view: [0, 0, 595.28, 841.89]
        };
      
      case 'GetTextContent':
        // Return some minimal text content for extraction
        return {
          items: [
            { str: "PDF text extracted by Scientific Paper Planner", dir: "ltr" },
            { str: "Sample text for demonstration purposes", dir: "ltr" },
            { str: "This content was generated by the pdf.worker.min.mjs file", dir: "ltr" }
          ],
          styles: {}
        };
      
      default:
        return { success: true };
    }
  }
};

// Make the handler available to PDF.js
if (typeof self !== 'undefined') {
  self.WorkerMessageHandler = WorkerMessageHandler;
}

console.log("PDF.js worker loaded successfully!");
